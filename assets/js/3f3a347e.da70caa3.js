"use strict";(self.webpackChunkexperimenter_docs=self.webpackChunkexperimenter_docs||[]).push([[6082],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),m=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},f="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),f=m(n),c=i,u=f["".concat(s,".").concat(c)]||f[c]||d[c]||r;return n?a.createElement(u,l(l({ref:t},p),{},{components:n})):a.createElement(u,l({ref:t},p))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[f]="string"==typeof e?e:i,l[1]=o;for(var m=2;m<r;m++)l[m]=n[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7302:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>m});var a=n(7462),i=(n(7294),n(4137));const r={id:"fml-cli",title:"Nimbus FML command line interface",slug:"/fml/fml-cli",sidebar_position:4},l="Commands",o={unversionedId:"deep-dives/specifications/fml/fml-cli",id:"deep-dives/specifications/fml/fml-cli",title:"Nimbus FML command line interface",description:"Generating code for an mobile application",source:"@site/docs/deep-dives/specifications/fml/fml-cli.mdx",sourceDirName:"deep-dives/specifications/fml",slug:"/fml/fml-cli",permalink:"/fml/fml-cli",draft:!1,editUrl:"https://github.com/mozilla/experimenter-docs/edit/main/docs/deep-dives/specifications/fml/fml-cli.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"fml-cli",title:"Nimbus FML command line interface",slug:"/fml/fml-cli",sidebar_position:4},sidebar:"sidebar",previous:{title:"Componentizing the Nimbus Feature Manifest",permalink:"/fml/fml-imports-and-includes"},next:{title:"Co-enrolling Features",permalink:"/fml/coenrolling-features"}},s={},m=[{value:"Generating code for an mobile application",id:"generating-code-for-an-mobile-application",level:2},{value:"Adding <code>repo-file</code>s",id:"adding-repo-files",level:3},{value:"Getting different versions of the same manifest",id:"getting-different-versions-of-the-same-manifest",level:3},{value:"Caching remote files",id:"caching-remote-files",level:3},{value:"Generating a manifest file for experimenter",id:"generating-a-manifest-file-for-experimenter",level:2},{value:"Validating a manifest file",id:"validating-a-manifest-file",level:2},{value:"Re-write a complicated distributed manifest into a single file",id:"re-write-a-complicated-distributed-manifest-into-a-single-file",level:2},{value:"Generating a machine readable overview of a feature",id:"generating-a-machine-readable-overview-of-a-feature",level:2},{value:"Hashes",id:"hashes",level:3},{value:"Types",id:"types",level:3},{value:"Feature metadata",id:"feature-metadata",level:3}],p={toc:m},f="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(f,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"commands"},"Commands"),(0,i.kt)("h2",{id:"generating-code-for-an-mobile-application"},"Generating code for an mobile application"),(0,i.kt)("p",null,"The simplest invocation is in this form:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"% nimbus-fml generate --language <LANGUAGE> --channel <CHANNEL> <INPUT> <OUTPUT>\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LANGUAGE")," can be ",(0,i.kt)("inlineCode",{parentName:"li"},"kotlin")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"swift"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CHANNEL")," is one of the channels specified in the FML file."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"INPUT")," may be a local file or directory."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"OUTPUT")," should be a local file or directory.")),(0,i.kt)("p",null,"If ",(0,i.kt)("inlineCode",{parentName:"p"},"INPUT")," is a directory, it is recursively searches for any files with names ending in ",(0,i.kt)("inlineCode",{parentName:"p"},".fml.yaml"),"."),(0,i.kt)("p",null,"This command should be called at build time of components and the build time of the application."),(0,i.kt)("h3",{id:"adding-repo-files"},"Adding ",(0,i.kt)("inlineCode",{parentName:"h3"},"repo-file"),"s"),(0,i.kt)("p",null,"Adding ",(0,i.kt)("a",{parentName:"p",href:"/fml/fml-paths"},"repo files")," can be done with one or more ",(0,i.kt)("inlineCode",{parentName:"p"},"--repo-file")," argument."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"% nimbus-fml generate --language <LANGUAGE> --repo-file ./app-structure.json <INPUT> <OUTPUT>\n")),(0,i.kt)("h3",{id:"getting-different-versions-of-the-same-manifest"},"Getting different versions of the same manifest"),(0,i.kt)("p",null,"For ",(0,i.kt)("a",{parentName:"p",href:"/fml/fml-paths"},"remote manifests"),", the default branch to fetch from is ",(0,i.kt)("inlineCode",{parentName:"p"},"main"),". This can be changed with the ",(0,i.kt)("inlineCode",{parentName:"p"},"--ref")," option."),(0,i.kt)("p",null,"Using a ",(0,i.kt)("inlineCode",{parentName:"p"},"ref")," is equivalent to taking the remote repo of the manifest path and creating a ",(0,i.kt)("inlineCode",{parentName:"p"},"repo-file")," with that repo mapped to the given ",(0,i.kt)("inlineCode",{parentName:"p"},"ref"),"."),(0,i.kt)("p",null,"This command uses feature manifest from the ",(0,i.kt)("inlineCode",{parentName:"p"},"releases_v118")," branch of the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla-mobile/firefox-android"},"https://github.com/mozilla-mobile/firefox-android")," repository:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"% nimbus-fml generate --language <LANGUAGE> --ref releases_v118 @mozilla-mobile/firefox-android/fenix/app/nimbus.fml.yaml <OUTPUT>\n")),(0,i.kt)("h3",{id:"caching-remote-files"},"Caching remote files"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"% nimbus-fml generate --language <LANGUAGE> --channel CHANNEL --cache-dir ./build/cache-dir <INPUT> <OUTPUT>\n")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/fml/fml-imports-and-includes"},"For ",(0,i.kt)("inlineCode",{parentName:"a"},"include")," and ",(0,i.kt)("inlineCode",{parentName:"a"},"import")," directives in the FML"),", a remote file may be referenced. The cache directory is a local cache of these remote files."),(0,i.kt)("p",null,"For each of the following, ",(0,i.kt)("inlineCode",{parentName:"p"},"--ref"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"--cache-dir")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"--repo-file")," flags are supported."),(0,i.kt)("h2",{id:"generating-a-manifest-file-for-experimenter"},"Generating a manifest file for experimenter"),(0,i.kt)("p",null,"The reason to use a custom manifest format a language specific JSON serialization library is to do with keeping the code in sync with the experimenter web server."),(0,i.kt)("p",null,"For legacy reasons, this is a different format of yaml file, which should be checked in to version control and is periodically pulled in by experimenter."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"% nimbus-fml generate-experimenter <INPUT> <OUTPUT>\n")),(0,i.kt)("p",null,"This should only be called at the application level, with the one main fml file as an input."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"--cache-dir"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"--ref"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"--repo-file")," arguments are also supported."),(0,i.kt)("h2",{id:"validating-a-manifest-file"},"Validating a manifest file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"% nimbus-fml validate <INPUT>\n")),(0,i.kt)("p",null,"This gives a view of the validation process for all channels."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"% nimbus-fml validate @mozilla-mobile/firefox-android/fenix/app/nimbus.fml.yaml\n")),(0,i.kt)("p",null,"gives"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u2139\ufe0f Loaded modules:\n- https://raw.githubusercontent.com/mozilla-mobile/firefox-android/main/fenix/app/onboarding.fml.yaml\n- https://raw.githubusercontent.com/mozilla-mobile/firefox-android/main/fenix/app/nimbus.fml.yaml\n- https://raw.githubusercontent.com/mozilla-mobile/firefox-android/main/fenix/app/pbm.fml.yaml\n- https://raw.githubusercontent.com/mozilla-mobile/firefox-android/main/android-components/components/browser/engine-gecko/geckoview.fml.yaml\n- https://raw.githubusercontent.com/mozilla-mobile/firefox-android/main/android-components/components/service/nimbus/messaging.fml.yaml\n\nValidating manifest for different channels:\n\u2705 release.............valid\n\u2705 beta................valid\n\u2705 nightly.............valid\n\u2705 developer...........valid\n")),(0,i.kt)("h2",{id:"re-write-a-complicated-distributed-manifest-into-a-single-file"},"Re-write a complicated distributed manifest into a single file"),(0,i.kt)("p",null,"The FML spec allows you to ",(0,i.kt)("a",{parentName:"p",href:"/fml/fml-imports-and-includes"},"import and include dependencies' manifests"),". This is convenient for engineers to place the feature manifest close to where the feature code lives."),(0,i.kt)("p",null,"However, for some circumstances, it may not be good for packagers or distributers of the software: e.g. if the file is to be distributed with the software."),(0,i.kt)("p",null,"To help this, the ",(0,i.kt)("inlineCode",{parentName:"p"},"single-file")," command is used to merge all imports and includes into the top level file, with a single channel."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"% nimbus-fml single-file --channel release @mozilla-mobile/firefox-android/fenix/app/nimbus.fml.yaml single-file.fml.yaml\n")),(0,i.kt)("h2",{id:"generating-a-machine-readable-overview-of-a-feature"},"Generating a machine readable overview of a feature"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"% nimbus-fml info [--channel CHANNEL] [--json] <MANIFEST> [--feature FEATURE]\n")),(0,i.kt)("p",null,"This prints a simplified YAML or JSON representation for each feature. e.g."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "file": "https://raw.githubusercontent.com/mozilla-mobile/firefox-android/main/fenix/app/nimbus.fml.yaml",\n  "features": {\n    "homescreen": {\n      "description": "The homescreen that the user goes to when they press home or new tab.",\n      "types": [\n        "Boolean",\n        "HomeScreenSection",\n        "Map<HomeScreenSection, Boolean>"\n      ],\n      "hashes": {\n        "schema": "7a15570b",\n        "defaults": "423ab0bd"\n      }\n    }\n  }\n}\n')),(0,i.kt)("h3",{id:"hashes"},"Hashes"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"hashes")," object shows truncated SHA256 hashes for:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"the schema (the types, variable names, the enum variants available)"),(0,i.kt)("li",{parentName:"ul"},"the defaults (the default values of the feature variables)")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"Changes in the ",(0,i.kt)("strong",{parentName:"li"},"schema hash")," might indicate a change in the ",(0,i.kt)("strong",{parentName:"li"},"feature code"),"."),(0,i.kt)("li",{parentName:"ul"},"Changes in the ",(0,i.kt)("strong",{parentName:"li"},"defaults hash")," would indicate a ",(0,i.kt)("strong",{parentName:"li"},"different configuration being used")," for the same code."),(0,i.kt)("li",{parentName:"ul"},"Changes in the schema hash will almost always be accompanied by a change in the defaults hash, with the exception of changing variable types from\na ",(0,i.kt)("inlineCode",{parentName:"li"},"String")," type to a ",(0,i.kt)("inlineCode",{parentName:"li"},"string-alias")," type (or vice-versa)."))),(0,i.kt)("h3",{id:"types"},"Types"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"types")," list is a sorted list of the types involved used to define the feature. This list may be used as a proxy for a measure of complexity of the feature configuration space."),(0,i.kt)("h3",{id:"feature-metadata"},"Feature metadata"),(0,i.kt)("p",null,"In addition, ",(0,i.kt)("a",{parentName:"p",href:"/fml/feature-metadata"},"the feature metadata")," is also displayed."),(0,i.kt)("p",null,"If a ",(0,i.kt)("inlineCode",{parentName:"p"},"--feature")," argument is supplied, then restrict the output to just this feature."),(0,i.kt)("p",null,"If a ",(0,i.kt)("inlineCode",{parentName:"p"},"--channel")," argument is supplied, then use this channel. This will affect the ",(0,i.kt)("inlineCode",{parentName:"p"},"defaults")," hashes."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"Using ",(0,i.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"info")," with JQ"),(0,i.kt)("p",{parentName:"admonition"},"You can use ",(0,i.kt)("inlineCode",{parentName:"p"},"--json")," JQ to output some interesting data:"),(0,i.kt)("p",{parentName:"admonition"},"Get the features for this app:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"% nimbus-fml info <INPUT> --json | jq '.features|keys'\n")),(0,i.kt)("p",{parentName:"admonition"},"Get the channels for this app:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"% nimbus-fml channels <INPUT> --json\n")),(0,i.kt)("p",{parentName:"admonition"},"Get the hashes for just the ",(0,i.kt)("inlineCode",{parentName:"p"},"homescreen")," feature:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"% nimbus-fml info <INPUT> --json | jq '.features.homescreen.hashes'\n"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"--cache-dir"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"--ref")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"--repo-file")," arguments are also supported."))}d.isMDXComponent=!0}}]);