"use strict";(self.webpackChunkexperimenter_docs=self.webpackChunkexperimenter_docs||[]).push([[5308],{4137:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),u=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=u(e.components);return i.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,f=p["".concat(c,".").concat(d)]||p[d]||m[d]||a;return n?i.createElement(f,o(o({ref:t},l),{},{components:n})):i.createElement(f,o({ref:t},l))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2469:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var i=n(7462),r=(n(7294),n(4137));const a={id:"outcomes",title:"Outcomes",slug:"outcomes",sidebar_position:4},o=void 0,s={unversionedId:"deep-dives/jetstream/outcomes",id:"deep-dives/jetstream/outcomes",title:"Outcomes",description:"An Outcome is a reusable configuration snippet",source:"@site/docs/deep-dives/jetstream/outcomes.md",sourceDirName:"deep-dives/jetstream",slug:"/deep-dives/jetstream/outcomes",permalink:"/deep-dives/jetstream/outcomes",draft:!1,editUrl:"https://github.com/mozilla/experimenter-docs/edit/main/docs/deep-dives/jetstream/outcomes.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"outcomes",title:"Outcomes",slug:"outcomes",sidebar_position:4},sidebar:"sidebar",previous:{title:"Statistics",permalink:"/deep-dives/jetstream/statistics"},next:{title:"Configuring Jetstream",permalink:"/deep-dives/jetstream/configuration"}},c={},u=[{value:"Defining an Outcome",id:"defining-an-outcome",level:2},{value:"Parameterizing Outcomes",id:"parameterizing-outcomes",level:2},{value:"When should I use Outcomes?",id:"when-should-i-use-outcomes",level:2},{value:"What happens if an Outcome changes?",id:"what-happens-if-an-outcome-changes",level:2}],l={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,i.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"An Outcome is a reusable configuration snippet\nthat defines metrics and statistical summaries for Jetstream to compute,\nwhich will be displayed on the Experimenter results page."),(0,r.kt)("p",null,"Outcomes are defined in TOML snippets in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mozilla/metric-hub/tree/main/jetstream/outcomes"},(0,r.kt)("inlineCode",{parentName:"a"},"jetstream/outcomes/")," path of the metric-hub repository"),"."),(0,r.kt)("p",null,"See what ",(0,r.kt)("a",{parentName:"p",href:"https://mozilla.github.io/metric-hub/outcomes/firefox_desktop/firefox_suggest/"},"outcomes are available"),"."),(0,r.kt)("p",null,"Watch a demo about how to use Outcomes:"),(0,r.kt)("iframe",{src:"https://drive.google.com/file/d/10pHG1S8ucpVBlNgCq2CIR5lXPLdJQfwm/preview",width:"640",height:"480"}),(0,r.kt)("h2",{id:"defining-an-outcome"},"Defining an Outcome"),(0,r.kt)("p",null,"A simple Outcome definition (excerpted from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mozilla/metric-hub/tree/main/jetstream/outcomes/firefox_desktop/picture_in_picture.toml"},"a live Outcome"),") looks like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},'friendly_name = "Picture in Picture"\ndescription = "Usage and engagement metrics for the video Picture-in-Picture feature."\ndefault_metrics = ["used_picture_in_picture"]\n\n[metrics.used_picture_in_picture]\nfriendly_name = "Used Picture in Picture"\ndescription = "Fraction of clients that used PiP over the measurement window"\nselect_expression = """\n    LOGICAL_OR(\n        event_category = "pictureinpicture"\n        AND event_method = "create"\n    )\n"""\ndata_source = "events"\nstatistics = { binomial = {} }\n')),(0,r.kt)("p",null,"The important elements are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Top-level ",(0,r.kt)("inlineCode",{parentName:"li"},"friendly_name")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"description")," fields, which define how the Outcome appears in Experimenter"),(0,r.kt)("li",{parentName:"ul"},"The optional top-level ",(0,r.kt)("inlineCode",{parentName:"li"},"default_metrics"),' field, which specifies the metrics that will be showed at the top of the visualization page as the "primary metrics"'),(0,r.kt)("li",{parentName:"ul"},"One or more ",(0,r.kt)("inlineCode",{parentName:"li"},"metrics")," blocks that describe the metrics to compute, and any supporting ",(0,r.kt)("inlineCode",{parentName:"li"},"data_source"),"s as necessary.")),(0,r.kt)("p",null,"The configuration language is identical to the custom experiment configuration language described in ",(0,r.kt)("a",{parentName:"p",href:"./configuration"},"Configuring Jetstream"),"."),(0,r.kt)("p",null,"Opening a pull request to ",(0,r.kt)("inlineCode",{parentName:"p"},"metric-hub")," with an Outcome definition will cause it to be validated.\nIf it passes, a data scientist can merge the Outcome definition without additional review."),(0,r.kt)("p",null,"Experimenter will need to be re-deployed to pick up a new Outcome. Please ask in #nimbus-project if you're in a hurry!"),(0,r.kt)("h2",{id:"parameterizing-outcomes"},"Parameterizing Outcomes"),(0,r.kt)("p",null,"It is also possible to parameterize ",(0,r.kt)("inlineCode",{parentName:"p"},"select_expression")," in outcomes, values the parameters to be replaced with can then be specified in external jetstream config."),(0,r.kt)("p",null,"Example of an outcome using parameterization:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},'friendly_name = "Picture in Picture"\ndescription = "Usage and engagement metrics for the video Picture-in-Picture feature."\ndefault_metrics = ["used_picture_in_picture"]\n\n### parameters definition\n[parameters]\n\n[parameters.id]\nfriendly_name = "ID associated with the experiment"\ndescription = "ID associated with this experiment"\ndefault = "0"  # this will be the default value if not overwritten in an external config\ndistinct_by_branch = false  # if set to true, ensure to specify `branch_name` for each parameter\n\n[metrics.used_picture_in_picture]\nfriendly_name = "Used Picture in Picture"\ndescription = "Fraction of clients that used PiP over the measurement window"\nselect_expression = "id = {{parameters.id}}"  # this allows us to reference defined parameters here\ndata_source = "events"\nstatistics = { binomial = {} }\n')),(0,r.kt)("p",null,"Instruction on how to specify parameter values can be found ",(0,r.kt)("a",{parentName:"p",href:"/deep-dives/jetstream/configuration#overwriting-outcomes-parameters"},"Jetstream Configuration")),(0,r.kt)("h2",{id:"when-should-i-use-outcomes"},"When should I use Outcomes?"),(0,r.kt)("p",null,"As a data scientist, it's useful to define Outcomes whenever an endpoint is going to be used more than once.\nIt reduces the amount of work you will need to do for each follow-up experiment and ensures that metrics are defined consistently."),(0,r.kt)("p",null,"If you're not certain about how you want to define a metric, it's okay to use a custom configuration first,\nand then copy-paste the metrics into an Outcome for later use."),(0,r.kt)("h2",{id:"what-happens-if-an-outcome-changes"},"What happens if an Outcome changes?"),(0,r.kt)("p",null,"Changing an Outcome does not re-run any experiments.\nA commit hash associated with the version of each Outcome is captured in the ",(0,r.kt)("a",{parentName:"p",href:"./data-products"},"experiment metadata")," published to GCS,\nso it's possible to understand which version of an Outcome was associated with an experiment analysis."))}m.isMDXComponent=!0}}]);