"use strict";(self.webpackChunkexperimenter_docs=self.webpackChunkexperimenter_docs||[]).push([[7379],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),u=i,h=d["".concat(l,".").concat(u)]||d[u]||m[u]||a;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},455:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(7462),i=(n(7294),n(4137));const a={id:"nimbus-cli-environment-vars",title:"Using Environment variables",slug:"/nimbus-cli/environment-variables"},o=void 0,s={unversionedId:"deep-dives/mobile/nimbus-cli/nimbus-cli-environment-vars",id:"deep-dives/mobile/nimbus-cli/nimbus-cli-environment-vars",title:"Using Environment variables",description:"adb and xcrun",source:"@site/docs/deep-dives/mobile/nimbus-cli/100-configuration-variables.mdx",sourceDirName:"deep-dives/mobile/nimbus-cli",slug:"/nimbus-cli/environment-variables",permalink:"/nimbus-cli/environment-variables",draft:!1,editUrl:"https://github.com/mozilla/experimenter-docs/edit/main/docs/deep-dives/mobile/nimbus-cli/100-configuration-variables.mdx",tags:[],version:"current",sidebarPosition:100,frontMatter:{id:"nimbus-cli-environment-vars",title:"Using Environment variables",slug:"/nimbus-cli/environment-variables"},sidebar:"sidebar",previous:{title:"Working with Devices",permalink:"/nimbus-cli/on-devices"},next:{title:"Instrumentation Guide",permalink:"/nimbus-cli/instrumentation"}},l={},p=[{value:"<code>adb</code> and <code>xcrun</code>",id:"adb-and-xcrun",level:2},{value:"Experimenter URLs",id:"experimenter-urls",level:2},{value:"Remote Settings URLs",id:"remote-settings-urls",level:2},{value:"Manifest Cache Directory",id:"manifest-cache-directory",level:2},{value:"Suppressing update checking",id:"suppressing-update-checking",level:2},{value:"The server host and port",id:"the-server-host-and-port",level:2}],c={toc:p},d="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"adb-and-xcrun"},(0,i.kt)("inlineCode",{parentName:"h2"},"adb")," and ",(0,i.kt)("inlineCode",{parentName:"h2"},"xcrun")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"nimbus-cli")," assumes that ",(0,i.kt)("a",{parentName:"p",href:"/nimbus-cli/install#rerequisites"},(0,i.kt)("inlineCode",{parentName:"a"},"adb")," and ",(0,i.kt)("inlineCode",{parentName:"a"},"xcrun")," are on the ",(0,i.kt)("inlineCode",{parentName:"a"},"PATH")),". If they are not (or aren't spelled ",(0,i.kt)("inlineCode",{parentName:"p"},"adb")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"adb.exe"),"), then you can configure them via the ",(0,i.kt)("inlineCode",{parentName:"p"},"ADB_PATH")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"XCRUN_PATH")," environment variables."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'export ADB_PATH="/Applications/Android Studio.app/platform-tools/bin/adb"\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'export XCRUN_PATH="$HOME/Library/CustomXcode/bin/xcrun"\n')),(0,i.kt)("h2",{id:"experimenter-urls"},"Experimenter URLs"),(0,i.kt)("p",null,"Experimenter URLs are used for accessing experiments via the ",(0,i.kt)("inlineCode",{parentName:"p"},"/api/v6")," endpoints. They're hardcoded into ",(0,i.kt)("inlineCode",{parentName:"p"},"nimbus-cli")," for both stage and production versions. However, just occassionally you may want to change these URLs."),(0,i.kt)("p",null,"e.g. for a local development version of experimenter with ",(0,i.kt)("inlineCode",{parentName:"p"},"localhost"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"export NIMBUS_API_URL=https://localhost:8080\nexport NIMBUS_API_STAGE_URL=https://localhost:3030\n")),(0,i.kt)("h2",{id:"remote-settings-urls"},"Remote Settings URLs"),(0,i.kt)("p",null,"URLs for Remote Settings are also hardcoded into ",(0,i.kt)("inlineCode",{parentName:"p"},"nimbus-cli")," for both the stage and release versions. Like Experimenter, you may occassionally want to change these URLs."),(0,i.kt)("p",null,"e.g."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"export NIMBUS_URL=https://no-cdn.remote-settings.mozilla.com\nexport NIMBUS_STAGE_URL=https://no-cdn.stage-remote-settings.mozilla.com\n")),(0,i.kt)("p",null,"This has been helpful in the past when trying to debug a problem with CDN, or Remote Settings has moved."),(0,i.kt)("p",null,"Note: while the Remote Settings represents what the live apps see, there is approximately 1 hour latency between changing an experiment on Experimenter and it being synced to Remote Settings."),(0,i.kt)("h2",{id:"manifest-cache-directory"},"Manifest Cache Directory"),(0,i.kt)("p",null,"The manifest downloading happens on each invocation of the ",(0,i.kt)("inlineCode",{parentName:"p"},"enroll"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"validate")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"test-feature")," commands."),(0,i.kt)("p",null,"You can speed this up by setting directory as the cache for downloading the manifests:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"export NIMBUS_MANIFEST_CACHE=./caches/fml\n")),(0,i.kt)("p",null,"However, it should be noted that for some files (especially downloading from ",(0,i.kt)("inlineCode",{parentName:"p"},"main"),"), they change even though the URL remains the same."),(0,i.kt)("p",null,"For this, you should consider putting into your ",(0,i.kt)("inlineCode",{parentName:"p"},".profile")," file something like"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"export NIMBUS_MANIFEST_CACHE=$HOME/.local/state/fml/$(date -Idate)\n")),(0,i.kt)("p",null,"so as to only use the cache for one day."),(0,i.kt)("h2",{id:"suppressing-update-checking"},"Suppressing update checking"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"nimbus-cli")," periodically checks for a new version. This can be disabled by setting the following environment variable."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'export NIMBUS_CLI_SUPPRESS_UPDATE_CHECK="true"\n')),(0,i.kt)("h2",{id:"the-server-host-and-port"},"The server host and port"),(0,i.kt)("p",null,"By default, the server that is started with ",(0,i.kt)("inlineCode",{parentName:"p"},"nimbus-cli start-server")," uses the machine's network interface to derive the external IP address."),(0,i.kt)("p",null,"Communicating with the server is done by other instances of ",(0,i.kt)("inlineCode",{parentName:"p"},"nimbus-cli")," by posting to the ",(0,i.kt)("inlineCode",{parentName:"p"},"/post")," endpoint. The port and host can be configured with the following environment variables."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"export NIMBUS_CLI_SERVER_HOST=0.0.0.0\nexport NIMBUS_CLI_SERVER_PORT=9090\n")))}m.isMDXComponent=!0}}]);