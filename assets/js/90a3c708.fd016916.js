"use strict";(self.webpackChunkexperimenter_docs=self.webpackChunkexperimenter_docs||[]).push([[8575],{4137:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=n.createContext({}),m=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(o.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=m(a),u=i,h=c["".concat(o,".").concat(u)]||c[u]||d[u]||r;return a?n.createElement(h,s(s({ref:t},p),{},{components:a})):n.createElement(h,s({ref:t},p))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,s=new Array(r);s[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[c]="string"==typeof e?e:i,s[1]=l;for(var m=2;m<r;m++)s[m]=a[m];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2884:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var n=a(7462),i=(a(7294),a(4137));const r={id:"statistics",title:"Statistics",slug:"statistics",sidebar_position:3},s=void 0,l={unversionedId:"deep-dives/jetstream/statistics",id:"deep-dives/jetstream/statistics",title:"Statistics",description:"Statistics reduce observations of many clients",source:"@site/docs/deep-dives/jetstream/statistics.md",sourceDirName:"deep-dives/jetstream",slug:"/deep-dives/jetstream/statistics",permalink:"/deep-dives/jetstream/statistics",draft:!1,editUrl:"https://github.com/mozilla/experimenter-docs/edit/main/docs/deep-dives/jetstream/statistics.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"statistics",title:"Statistics",slug:"statistics",sidebar_position:3},sidebar:"sidebar",previous:{title:"Metrics",permalink:"/deep-dives/jetstream/metrics"},next:{title:"Outcomes",permalink:"/deep-dives/jetstream/outcomes"}},o={},m=[{value:"Pretreatments",id:"pretreatments",level:2},{value:"Available pretreatments",id:"available-pretreatments",level:2},{value:"Available statistics",id:"available-statistics",level:2},{value:"How do I implement a statistic?",id:"how-do-i-implement-a-statistic",level:2}],p={toc:m},c="wrapper";function d(e){let{components:t,...a}=e;return(0,i.kt)(c,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Statistics reduce observations of many clients\nfrom a single analysis window\nto one or many rows\ndescribing the population."),(0,i.kt)("p",null,"Any summarization of the client-level data can be implemented as a statistic."),(0,i.kt)("p",null,"For example, a statistic could implement a statistical test,\nlike a Mann-Whitney U test or a Student's ",(0,i.kt)("em",{parentName:"p"},"t"),"-test."),(0,i.kt)("p",null,"Other statistics summarize the data from a branch\nto a kernel density estimate\nor a cumulative distribution function\nthat can be directly plotted."),(0,i.kt)("p",null,"Statistics can summarize each branch of the data,\ncompute pairwise comparisons of each branch to a reference branch,\nor both."),(0,i.kt)("p",null,"For example, the ",(0,i.kt)("inlineCode",{parentName:"p"},"bootstrap_mean")," statistic computes\na mean and its bootstrapped 95% confidence interval for each branch,\nas well as bootstrapped CIs for the difference between each branch\nand the reference branch."),(0,i.kt)("h2",{id:"pretreatments"},"Pretreatments"),(0,i.kt)("p",null,"Sometimes it's necessary to transform a metric before applying a statistic.\nPretreatments are a facility for specifying these transformations."),(0,i.kt)("p",null,"It is an error to pass a null value into a statistic.\nData scientists must explicitly handle nulls,\neither by writing a metric with a ",(0,i.kt)("inlineCode",{parentName:"p"},"COALESCE()")," clause,\ncoercing nulls to zero with the ",(0,i.kt)("inlineCode",{parentName:"p"},"zero_fill")," pretreatment,\nor dropping rows with null values using the ",(0,i.kt)("inlineCode",{parentName:"p"},"remove_nulls")," pretreatment."),(0,i.kt)("admonition",{title:"Don't drop that mic",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Dropping null values for engagement metrics can create misleading results.\nImagine an experiment that forces all but your most committed users to churn:\nif you dropped all the clients that didn't return in the second week,\nyour engagement metrics would skyrocket, since only the die-hards would be left!\nCoercing those nulls to zero instead\nwill accurately reflect the decline in your population's engagement."),(0,i.kt)("p",{parentName:"admonition"},"Dropping nulls can be necessary for performance metrics,\nwhere there's no sensible way to aggregate users that didn't return.")),(0,i.kt)("h2",{id:"available-pretreatments"},"Available pretreatments"),(0,i.kt)("p",null,"Supported pretreatments are listed below. Some pretreatments accept parameters, which are listed below the name of the pretreatment."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"remove_nulls"),": Remove rows with null values in the metric column"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"remove_indefinites"),": Remove rows with null or infinite values in the metric column"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"censor_highest_values"),": Removes the highest ",(0,i.kt)("em",{parentName:"li"},"fraction")," of rows in the metric column.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fraction"),": Fraction of rows to remove. Defaults to 1 - 1e-5."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"log"),": Log-transforms the metric column.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"base"),": Base of the logarithm. Defaults to 10.0."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"zero_fill"),": Replace null values in the metric column with zero.")),(0,i.kt)("h2",{id:"available-statistics"},"Available statistics"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Statistics")," that Jetstream knows about are listed below. Some statistics accept parameters, which are listed below the name of the statistic."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"binomial"),": Binomial outcome with bootstrapped CIs for differences between branches"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bootstrap_mean"),": Mean with bootstrapped confidence intervals. Removes the top 0.5% of values by default.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"num_samples"),": Number of bootstrap samples to compute. Defaults to 10,000."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"drop_highest"),": Fraction of highest samples to drop. Defaults to 0.005."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"count"),": A count of rows"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"deciles"),": Bootstrapped confidence intervals for differences between branches at deciles",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"num_samples"),": Number of bootstrap samples to compute. Defaults to 10,000."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"empirical_cdf"),": A sampled eCDF of each branch's distribution for a metric. Parameters are:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"log_space"),": Whether the CDF should be sampled at geometric (instead of linear) intervals (default: false)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"grid_size"),": Number of samples (default: 256)"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"kernel_density_estimate"),": A sampled KDE of each branch's distribution for a metric. Parameters are:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bandwidth"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"adjust"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"kernel"),": see ",(0,i.kt)("a",{parentName:"li",href:"https://www.statsmodels.org/stable/generated/statsmodels.nonparametric.kde.KDEUnivariate.fit.html"},"https://www.statsmodels.org/stable/generated/statsmodels.nonparametric.kde.KDEUnivariate.fit.html")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"gridsize"),": Number of samples (default: 256)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"log_space"),": Whether the KDE should be sampled at geometric (instead of linear) intervals (default: false)")))),(0,i.kt)("h2",{id:"how-do-i-implement-a-statistic"},"How do I implement a statistic?"),(0,i.kt)("p",null,"Statistics are defined in code at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/jetstream/blob/main/jetstream/statistics.py"},"https://github.com/mozilla/jetstream/blob/main/jetstream/statistics.py"),"."),(0,i.kt)("p",null,"Statistics should inherit from\nand implement the interface described by\nthe abstract ",(0,i.kt)("inlineCode",{parentName:"p"},"Statistic")," base class."),(0,i.kt)("p",null,"Most statistics only need to implement the ",(0,i.kt)("inlineCode",{parentName:"p"},"transform")," method,\nwhich accepts a ",(0,i.kt)("inlineCode",{parentName:"p"},"DataFrame")," representing a single analysis window,\na metric label describing the name of the column to analyze, and\na branch label representing a reference branch,\nand returns a ",(0,i.kt)("inlineCode",{parentName:"p"},"StatisticResultCollection"),"."),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"StatisticResultCollection")," is a wrapper around a ",(0,i.kt)("inlineCode",{parentName:"p"},"StatisticResult"),".\nThe meaning of the values on a StatisticResult is elaborated in the\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.telemetry.mozilla.org/datasets/jetstream.html#statistics-tables"},"statistics table schema documentation"),"."))}d.isMDXComponent=!0}}]);